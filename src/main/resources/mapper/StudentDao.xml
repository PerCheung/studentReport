<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.studentreport.dao.StudentDao">

    <resultMap type="edu.studentreport.entity.Student" id="StudentMap">
        <result property="studentId" column="student_id" jdbcType="INTEGER"/>
        <result property="studentPassword" column="student_password" jdbcType="VARCHAR"/>
        <result property="studentName" column="student_name" jdbcType="VARCHAR"/>
        <result property="studentSex" column="student_sex" jdbcType="INTEGER"/>
        <result property="studentTel" column="student_tel" jdbcType="VARCHAR"/>
        <result property="studentEmail" column="student_email" jdbcType="VARCHAR"/>
        <result property="studentCid" column="student_cid" jdbcType="VARCHAR"/>
        <result property="isPay" column="is_pay" jdbcType="INTEGER"/>
        <result property="dormId" column="dorm_id" jdbcType="VARCHAR"/>
        <result property="className" column="class_name" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询所有-->
    <select id="queryAll" resultMap="StudentMap">
        select student_id,
               student_password,
               student_name,
               student_sex,
               student_tel,
               student_email,
               student_cid,
               is_pay,
               dorm_id,
               class_name
        from student
    </select>

    <!--查询所有已缴费且无宿舍的学生-->
    <select id="queryAllisPay" resultMap="StudentMap">
        select student_id,
               student_password,
               student_name,
               student_sex,
               student_tel,
               student_email,
               student_cid,
               is_pay,
               dorm_id,
               class_name
        from student
        where is_pay = 1
          and dorm_id = 0
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="StudentMap">
        select student_id,
               student_password,
               student_name,
               student_sex,
               student_tel,
               student_email,
               student_cid,
               is_pay,
               dorm_id,
               class_name
        from student
        where student_id = #{studentId}
    </select>

    <!--查询班级内最大学号-->
    <select id="queryMaxByClassName" resultType="java.lang.Long">
        select max(student_id)
        from student
        where class_name = #{className}
    </select>


    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="StudentMap">
        select
        student_id, student_password, student_name, student_sex, student_tel, student_email, student_cid, is_pay,
        dorm_id, class_name
        from student
        <where>
            <if test="studentId != null">
                and student_id = #{studentId}
            </if>
            <if test="studentPassword != null and studentPassword != ''">
                and student_password = #{studentPassword}
            </if>
            <if test="studentName != null and studentName != ''">
                and student_name = #{studentName}
            </if>
            <if test="studentSex != null">
                and student_sex = #{studentSex}
            </if>
            <if test="studentTel != null and studentTel != ''">
                and student_tel = #{studentTel}
            </if>
            <if test="studentEmail != null and studentEmail != ''">
                and student_email = #{studentEmail}
            </if>
            <if test="studentCid != null and studentCid != ''">
                and student_cid = #{studentCid}
            </if>
            <if test="isPay != null">
                and is_pay = #{isPay}
            </if>
            <if test="dormId != null and dormId != ''">
                and dorm_id = #{dormId}
            </if>
            <if test="className != null and className != ''">
                and class_name = #{className}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from student
        <where>
            <if test="studentId != null">
                and student_id = #{studentId}
            </if>
            <if test="studentPassword != null and studentPassword != ''">
                and student_password = #{studentPassword}
            </if>
            <if test="studentName != null and studentName != ''">
                and student_name = #{studentName}
            </if>
            <if test="studentSex != null">
                and student_sex = #{studentSex}
            </if>
            <if test="studentTel != null and studentTel != ''">
                and student_tel = #{studentTel}
            </if>
            <if test="studentEmail != null and studentEmail != ''">
                and student_email = #{studentEmail}
            </if>
            <if test="studentCid != null and studentCid != ''">
                and student_cid = #{studentCid}
            </if>
            <if test="isPay != null">
                and is_pay = #{isPay}
            </if>
            <if test="dormId != null and dormId != ''">
                and dorm_id = #{dormId}
            </if>
            <if test="className != null and className != ''">
                and class_name = #{className}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="studentId" useGeneratedKeys="true">
        insert into student(student_id, student_password, student_name, student_sex, student_tel, student_email,
                            student_cid,
                            is_pay, dorm_id, class_name)
        values (#{studentId}, #{studentPassword}, #{studentName}, #{studentSex}, #{studentTel}, #{studentEmail},
                #{studentCid},
                #{isPay}, #{dormId}, #{className})
    </insert>

    <insert id="insertBatch" keyProperty="studentId" useGeneratedKeys="true">
        insert into student(student_id,student_password, student_name, student_sex, student_tel, student_email,
        student_cid,
        is_pay, dorm_id, class_name)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.studentId},#{entity.studentPassword}, #{entity.studentName}, #{entity.studentSex},
            #{entity.studentTel},
            #{entity.studentEmail}, #{entity.studentCid}, #{entity.isPay}, #{entity.dormId}, #{entity.className})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="studentId" useGeneratedKeys="true">
        insert into student(student_id,student_password, student_name, student_sex, student_tel, student_email,
        student_cid,
        is_pay, dorm_id, class_name)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.studentId},#{entity.studentPassword}, #{entity.studentName}, #{entity.studentSex},
            #{entity.studentTel},
            #{entity.studentEmail}, #{entity.studentCid}, #{entity.isPay}, #{entity.dormId}, #{entity.className})
        </foreach>
        on duplicate key update
        student_id = values(student_id),
        student_password = values(student_password),
        student_name = values(student_name),
        student_sex = values(student_sex),
        student_tel = values(student_tel),
        student_email = values(student_email),
        student_cid = values(student_cid),
        is_pay = values(is_pay),
        dorm_id = values(dorm_id),
        class_name = values(class_name)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update student
        <set>
            <if test="studentPassword != null and studentPassword != ''">
                student_password = #{studentPassword},
            </if>
            <if test="studentName != null and studentName != ''">
                student_name = #{studentName},
            </if>
            <if test="studentSex != null">
                student_sex = #{studentSex},
            </if>
            <if test="studentTel != null and studentTel != ''">
                student_tel = #{studentTel},
            </if>
            <if test="studentEmail != null and studentEmail != ''">
                student_email = #{studentEmail},
            </if>
            <if test="studentCid != null and studentCid != ''">
                student_cid = #{studentCid},
            </if>
            <if test="isPay != null">
                is_pay = #{isPay},
            </if>
            <if test="dormId != null and dormId != ''">
                dorm_id = #{dormId},
            </if>
            <if test="className != null and className != ''">
                class_name = #{className},
            </if>
        </set>
        where student_id = #{studentId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from student
        where student_id = #{studentId}
    </delete>

</mapper>

